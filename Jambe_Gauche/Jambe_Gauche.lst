


ARM Macro Assembler    Page 1 


    1 00000000         ; M. Akil, T. Grandpierre, R. Kachouri : département IT 
                       - ESIEE Paris -
    2 00000000         ; 01/2013 - Evalbot (Cortex M3 de Texas Instrument)
    3 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000         
   11 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   12 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   13 00000000         
   14 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   16 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   17 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   18 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   19 00000000         
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   22 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant0
   23 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   24 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   25 00000000         
   26 00000000                 IMPORT           LED_INIT
   27 00000000                 IMPORT           LED_DROIT_ON
   28 00000000                 IMPORT           LED_GAUCHE_ON
   29 00000000                 IMPORT           LED_GAUCHE_OFF
   30 00000000                 IMPORT           LED_DROIT_OFF
   31 00000000                 IMPORT           LED_DROIT_INVERSE
   32 00000000                 IMPORT           LED_GAUCHE_INVERSE
   33 00000000         
   34 00000000                 IMPORT           BUMPER_INIT
   35 00000000                 IMPORT           BUMPER_DROIT_VERIF
   36 00000000                 IMPORT           BUMPER_GAUCHE_VERIF
   37 00000000         
   38 00000000                 IMPORT           BOUTTON_INIT



ARM Macro Assembler    Page 2 


   39 00000000                 IMPORT           BOUTTON_DROIT_VERIF
   40 00000000                 IMPORT           BOUTTON_GAUCHE_VERIF
   41 00000000         
   42 00000000                 EXPORT           start
   43 00000000                 EXPORT           loop
   44 00000000                 EXPORT           wait1
   45 00000000         
   46 00000000         
   47 00000000         __main
   48 00000000         
   49 00000000         
   50 00000000         ;; Ajout de la vitesse dans le registre 11 avant la conf
                       iguration des moteurs
   51 00000000 F44F 7BB9       mov              r11,#0x172
   52 00000004         ; Initialisation des configurations de tous les composan
                       ts
   53 00000004 F7FF FFFE       BL               LED_INIT
   54 00000008 F7FF FFFE       BL               BUMPER_INIT
   55 0000000C F7FF FFFE       BL               BOUTTON_INIT
   56 00000010 F7FF FFFE       BL               MOTEUR_INIT
   57 00000014         ;; Phase 1 -> Arret un demi-temps
   58 00000014 F44F 75A8 
                       start   MOV              r5,#0x150   ; Permet de renvoye
                                                            r au bon endroit ap
                                                            rès la fin du wait 
                                                            (bx lr ne fonctionn
                                                            e pas car on verifi
                                                            e en temps réel si 
                                                            il y une touche sur
                                                             un bumper ou un bo
                                                            utton)
   59 00000018 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
   60 0000001C F7FF FFFE       BL               MOTEUR_DROIT_OFF
   61 00000020 F000 F81D       BL               WAIT
   62 00000024         
   63 00000024         ;; Phase 2 -> Avance un temps
   64 00000024         loop
   65 00000024         ; Evalbot avance droit devant
   66 00000024 F7FF FFFE       BL               MOTEUR_DROIT_OFF
   67 00000028 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
   68 0000002C F7FF FFFE       BL               LED_DROIT_OFF
   69 00000030 F7FF FFFE       BL               LED_GAUCHE_ON
   70 00000034         ; Permet de renvoyer au bon endroit après la fin du wait
                        (bx lr ne fonctionne pas car on verifie en temps réel s
                       i il y une touche sur un bumper ou un boutton)
   71 00000034 F44F 75A8       MOV              R5,#0x150
   72 00000038         
   73 00000038         ; Avancement pendant une période (deux WAIT)
   74 00000038 F000 F813       BL               WAIT2
   75 0000003C         
   76 0000003C         ;; Phase 3 -> Avance un temps
   77 0000003C         loop2
   78 0000003C         
   79 0000003C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
   80 00000040 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
   81 00000044 F7FF FFFE       BL               MOTEUR_DROIT_ON
   82 00000048 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   83 0000004C F7FF FFFE       BL               LED_DROIT_ON
   84 00000050 F7FF FFFE       BL               LED_GAUCHE_OFF



ARM Macro Assembler    Page 3 


   85 00000054 F44F 7514       MOV              R5,#0x250
   86 00000058         
   87 00000058 F000 F803       BL               WAIT2
   88 0000005C         
   89 0000005C E7FE            b                loop
   90 0000005E         
   91 0000005E         ;; Boucle d'attante
   92 0000005E 4C0A    WAIT    ldr              r4,=0xD557F
   93 00000060 E7FE            b                wait1
   94 00000062 4C0A    WAIT2   ldr              r4,=0x1AAAFF
   95 00000064         ;WAIT ldr r4, =0xAFFFFF 
   96 00000064         wait1
   97 00000064 F7FF FFFE       BL               BUMPER_DROIT_VERIF
   98 00000068 F7FF FFFE       BL               BUMPER_GAUCHE_VERIF
   99 0000006C F7FF FFFE       BL               BOUTTON_DROIT_VERIF
  100 00000070 F7FF FFFE       BL               BOUTTON_GAUCHE_VERIF
  101 00000074 3C01            subs             r4, #1
  102 00000076 D1FE            bne              wait1
  103 00000078 F5B5 7FA8       CMP              r5,#0x150
  104 0000007C D0DE            BEQ              loop2
  105 0000007E F5B5 7F14       CMP              r5,#0x250
  106 00000082 D0FE            BEQ              loop
  107 00000084         
  108 00000084 E7FE            b                loop
  109 00000086         
  110 00000086 BF00            NOP
  111 00000088                 END
              000D557F 
              001AAAFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\jambe_gauche.d -o.\jambe_gauche.o -I.\RTE\_Target_1 -IC:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\LM3S_DFP\1.1
.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" -
-predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA 1" --predefine=
"LM3S1968 SETA 1" --list=.\jambe_gauche.lst Jambe_Gauche.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file Jambe_Gauche.s
   Uses
      None
Comment: .text unused
WAIT 0000005E

Symbol: WAIT
   Definitions
      At line 92 in file Jambe_Gauche.s
   Uses
      At line 61 in file Jambe_Gauche.s
Comment: WAIT used once
WAIT2 00000062

Symbol: WAIT2
   Definitions
      At line 94 in file Jambe_Gauche.s
   Uses
      At line 74 in file Jambe_Gauche.s
      At line 87 in file Jambe_Gauche.s

__main 00000000

Symbol: __main
   Definitions
      At line 47 in file Jambe_Gauche.s
   Uses
      At line 9 in file Jambe_Gauche.s
Comment: __main used once
loop 00000024

Symbol: loop
   Definitions
      At line 64 in file Jambe_Gauche.s
   Uses
      At line 43 in file Jambe_Gauche.s
      At line 89 in file Jambe_Gauche.s
      At line 106 in file Jambe_Gauche.s
      At line 108 in file Jambe_Gauche.s

loop2 0000003C

Symbol: loop2
   Definitions
      At line 77 in file Jambe_Gauche.s
   Uses
      At line 104 in file Jambe_Gauche.s
Comment: loop2 used once
start 00000014

Symbol: start
   Definitions
      At line 58 in file Jambe_Gauche.s
   Uses
      At line 42 in file Jambe_Gauche.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: start used once
wait1 00000064

Symbol: wait1
   Definitions
      At line 96 in file Jambe_Gauche.s
   Uses
      At line 44 in file Jambe_Gauche.s
      At line 93 in file Jambe_Gauche.s
      At line 102 in file Jambe_Gauche.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BOUTTON_DROIT_VERIF 00000000

Symbol: BOUTTON_DROIT_VERIF
   Definitions
      At line 39 in file Jambe_Gauche.s
   Uses
      At line 99 in file Jambe_Gauche.s
Comment: BOUTTON_DROIT_VERIF used once
BOUTTON_GAUCHE_VERIF 00000000

Symbol: BOUTTON_GAUCHE_VERIF
   Definitions
      At line 40 in file Jambe_Gauche.s
   Uses
      At line 100 in file Jambe_Gauche.s
Comment: BOUTTON_GAUCHE_VERIF used once
BOUTTON_INIT 00000000

Symbol: BOUTTON_INIT
   Definitions
      At line 38 in file Jambe_Gauche.s
   Uses
      At line 55 in file Jambe_Gauche.s
Comment: BOUTTON_INIT used once
BUMPER_DROIT_VERIF 00000000

Symbol: BUMPER_DROIT_VERIF
   Definitions
      At line 35 in file Jambe_Gauche.s
   Uses
      At line 97 in file Jambe_Gauche.s
Comment: BUMPER_DROIT_VERIF used once
BUMPER_GAUCHE_VERIF 00000000

Symbol: BUMPER_GAUCHE_VERIF
   Definitions
      At line 36 in file Jambe_Gauche.s
   Uses
      At line 98 in file Jambe_Gauche.s
Comment: BUMPER_GAUCHE_VERIF used once
BUMPER_INIT 00000000

Symbol: BUMPER_INIT
   Definitions
      At line 34 in file Jambe_Gauche.s
   Uses
      At line 54 in file Jambe_Gauche.s
Comment: BUMPER_INIT used once
LED_DROIT_INVERSE 00000000

Symbol: LED_DROIT_INVERSE
   Definitions
      At line 31 in file Jambe_Gauche.s
   Uses
      None
Comment: LED_DROIT_INVERSE unused
LED_DROIT_OFF 00000000

Symbol: LED_DROIT_OFF



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 30 in file Jambe_Gauche.s
   Uses
      At line 68 in file Jambe_Gauche.s
Comment: LED_DROIT_OFF used once
LED_DROIT_ON 00000000

Symbol: LED_DROIT_ON
   Definitions
      At line 27 in file Jambe_Gauche.s
   Uses
      At line 83 in file Jambe_Gauche.s
Comment: LED_DROIT_ON used once
LED_GAUCHE_INVERSE 00000000

Symbol: LED_GAUCHE_INVERSE
   Definitions
      At line 32 in file Jambe_Gauche.s
   Uses
      None
Comment: LED_GAUCHE_INVERSE unused
LED_GAUCHE_OFF 00000000

Symbol: LED_GAUCHE_OFF
   Definitions
      At line 29 in file Jambe_Gauche.s
   Uses
      At line 84 in file Jambe_Gauche.s
Comment: LED_GAUCHE_OFF used once
LED_GAUCHE_ON 00000000

Symbol: LED_GAUCHE_ON
   Definitions
      At line 28 in file Jambe_Gauche.s
   Uses
      At line 69 in file Jambe_Gauche.s
Comment: LED_GAUCHE_ON used once
LED_INIT 00000000

Symbol: LED_INIT
   Definitions
      At line 26 in file Jambe_Gauche.s
   Uses
      At line 53 in file Jambe_Gauche.s
Comment: LED_INIT used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 17 in file Jambe_Gauche.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 16 in file Jambe_Gauche.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 79 in file Jambe_Gauche.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 18 in file Jambe_Gauche.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 15 in file Jambe_Gauche.s
   Uses
      At line 60 in file Jambe_Gauche.s
      At line 66 in file Jambe_Gauche.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 14 in file Jambe_Gauche.s
   Uses
      At line 81 in file Jambe_Gauche.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 23 in file Jambe_Gauche.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 22 in file Jambe_Gauche.s
   Uses
      At line 80 in file Jambe_Gauche.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 24 in file Jambe_Gauche.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 21 in file Jambe_Gauche.s
   Uses
      At line 59 in file Jambe_Gauche.s
      At line 67 in file Jambe_Gauche.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols


MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 20 in file Jambe_Gauche.s
   Uses
      At line 82 in file Jambe_Gauche.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 12 in file Jambe_Gauche.s
   Uses
      At line 56 in file Jambe_Gauche.s
Comment: MOTEUR_INIT used once
24 symbols
369 symbols in table
