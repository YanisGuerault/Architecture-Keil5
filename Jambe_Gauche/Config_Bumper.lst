


ARM Macro Assembler    Page 1 


    1 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
    2 00000000         
    3 00000000         ; The GPIODATA register is the data register
    4 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
    5 00000000         
    6 00000000         ; configure the corresponding pin to be an output
    7 00000000         ; all GPIO pins are inputs by default
    8 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
    9 00000000         
   10 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   11 00000000         ; By default, all GPIO pins have 2-mA drive.
   12 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   13 00000000         
   14 00000000         ; Digital enable register
   15 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   16 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   17 00000000         
   18 00000000         ; Pul_up
   19 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   20 00000000         
   21 00000000         ; Broches select
   22 00000000 00000001 
                       BUMP_DROIT
                               EQU              0x1
   23 00000000         
   24 00000000 00000002 
                       BUMP_GAUCHE
                               EQU              0x2
   25 00000000         
   26 00000000 00000003 
                       BUMP_TOUS
                               EQU              0x3
   27 00000000         
   28 00000000 00000120 



ARM Macro Assembler    Page 2 


                       VERIF   EQU              0x120
   29 00000000         
   30 00000000         
   31 00000000         ; Durée du clignotement
   32 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   33 00000000         
   34 00000000         
   35 00000000                 AREA             |.text|, CODE, READONLY
   36 00000000                 ENTRY
   37 00000000         
   38 00000000         ;; The EXPORT command specifies that a symbol can be acc
                       essed by other shared objects or executables.
   39 00000000                 EXPORT           BUMPER_INIT
   40 00000000                 EXPORT           BUMPER_DROIT_VERIF
   41 00000000                 EXPORT           BUMPER_GAUCHE_VERIF
   42 00000000         
   43 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   44 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   45 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   46 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   47 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   48 00000000         
   49 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   50 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   51 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant0
   52 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   53 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   54 00000000         
   55 00000000                 IMPORT           LED_DROIT_ON
   56 00000000                 IMPORT           LED_GAUCHE_ON
   57 00000000                 IMPORT           LED_GAUCHE_OFF
   58 00000000                 IMPORT           LED_DROIT_OFF
   59 00000000                 IMPORT           start
   60 00000000                 IMPORT           loop
   61 00000000         
   62 00000000         
   63 00000000         BUMPER_INIT
   64 00000000         ;; Init de l'horloge      
   65 00000000 F8DF 80CC       ldr              r8, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   66 00000004 F8D8 0000       ldr              r0, [r8]
   67 00000008 F040 0030       ORR              r0, #0x00000030 ;;bit 20 = PWM 



ARM Macro Assembler    Page 3 


                                                            recoit clock: ON (p
                                                            271) 
   68 0000000C F8C8 0000       str              r0, [r8]
   69 00000010         
   70 00000010         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   71 00000010 BF00            nop                          ;; tres tres import
                                                            ant....
   72 00000012 BF00            nop
   73 00000014 BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   74 00000016         
   75 00000016         
   76 00000016         
   77 00000016         
   78 00000016         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper 1 et
                        2
   79 00000016         
   80 00000016 F04F 0003       ldr              r0, = BUMP_TOUS
   81 0000001A         
   82 0000001A F8DF 80B8       ldr              r8, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up   
   83 0000001E F8C8 0000       str              r0, [r8]
   84 00000022         
   85 00000022 F8DF 80B4       ldr              r8, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction  
   86 00000026 F8C8 0000       str              r0, [r8]
   87 0000002A         
   88 0000002A F8DF 80B0       ldr              r8, = GPIO_PORTE_BASE + (BUMP_T
OUS<<2)
   89 0000002E         
   90 0000002E         ;ldr r8, = GPIO_PORTE_BASE + (BUMP_GAUCHE<<2)
   91 0000002E         
   92 0000002E         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
   93 0000002E         
   94 0000002E 4770            BX               LR
   95 00000030         
   96 00000030         ;Permet de savoir si le bumper est actif, si oui on renv
                       oi vers BUMPER_DROIT_ACTIF
   97 00000030         BUMPER_DROIT_VERIF
   98 00000030 F8D8 1000       ldr              r1,[r8]
   99 00000034 2902            CMP              r1,#BUMP_GAUCHE
  100 00000036         ; Si active, va vers la fonction ACTIF (fait toutes les 
                       actions car le bumper a été activer)
  101 00000036 D011            BEQ              BUMPER_DROIT_ACTIF
  102 00000038 F5B2 7F90       CMP              r2,#VERIF
  103 0000003C F04F 0200       MOV              r2,#0x0
  104 00000040 F43F AFFE       BEQ              start
  105 00000044 4770            BX               LR
  106 00000046         
  107 00000046         ;Permet de savoir si le bumper est actif, si oui on renv
                       oi vers BUMPER_GAUCHE_ACTIF  
  108 00000046         BUMPER_GAUCHE_VERIF
  109 00000046 F8D8 1000       ldr              r1,[r8]
  110 0000004A 2901            CMP              r1,#BUMP_DROIT



ARM Macro Assembler    Page 4 


  111 0000004C D01F            BEQ              BUMPER_GAUCHE_ACTIF
  112 0000004E F5B2 7F90       CMP              r2,#VERIF
  113 00000052 F04F 0200       MOV              r2,#0x0
  114 00000056 F43F AFFE       BEQ              start
  115 0000005A 4770            BX               LR
  116 0000005C         
  117 0000005C         ;Trois phases, marche arrière 1 temps, demi-tour puis en
                       core marche arrière 1 temps et repart comme un start  
  118 0000005C         BUMPER_DROIT_ACTIF
  119 0000005C F7FF FFFE       BL               LED_GAUCHE_OFF
  120 00000060 F7FF FFFE       BL               LED_DROIT_ON
  121 00000064 F7FF FFFE       BL               MOTEUR_DROIT_ON
  122 00000068 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  123 0000006C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  124 00000070 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  125 00000074 F000 F824       BL               WAIT
  126 00000078 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  127 0000007C F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  128 00000080 F000 F822       BL               WAITS2
  129 00000084 F000 F820       BL               WAITS2
  130 00000088 F44F 7290       MOV              r2,#0x120
  131 0000008C E7FE            B                BUMPER_DROIT_VERIF
  132 0000008E         
  133 0000008E         ;Deux phases, demi-tour puis arret pendant 2 temps (le t
                       emps que le deuxième evalbot finissent sa manoeuvre) et 
                       repart comme un start
  134 0000008E         BUMPER_GAUCHE_ACTIF
  135 0000008E F7FF FFFE       BL               LED_GAUCHE_ON
  136 00000092 F7FF FFFE       BL               LED_DROIT_OFF
  137 00000096 F7FF FFFE       BL               MOTEUR_DROIT_ON
  138 0000009A F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  139 0000009E F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  140 000000A2 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  141 000000A6 F000 F80F       BL               WAITS2
  142 000000AA F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  143 000000AE F000 F807       BL               WAIT
  144 000000B2 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  145 000000B6 F000 F807       BL               WAITS2
  146 000000BA F44F 7290       MOV              r2,#0x120
  147 000000BE E7FE            B                BUMPER_GAUCHE_VERIF
  148 000000C0         
  149 000000C0 4C07    WAIT    ldr              r4,=0xC11111
  150 000000C2 3C01    wait1   subs             r4, #1
  151 000000C4 D1FD            bne              wait1
  152 000000C6 4770            BX               LR
  153 000000C8         
  154 000000C8 4C06    WAITS2  ldr              r4,=0x161FFFF
  155 000000CA 3C01    wait2   subs             r4, #1
  156 000000CC D1FD            bne              wait2
  157 000000CE 4770            BX               LR
  158 000000D0         
  159 000000D0         ;WAIT2  mov r10,r4
  160 000000D0         ;  ldr r4,=0x1AAAFF
  161 000000D0         ;  subs r4,r10
  162 000000D0         ;wait2 subs r4, #1
  163 000000D0         ;        bne wait2
  164 000000D0         ;  BX LR
  165 000000D0         
  166 000000D0         



ARM Macro Assembler    Page 5 


  167 000000D0                 END
              400FE108 
              40024510 
              4002451C 
              4002400C 
              00C11111 
              0161FFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\config_bumper.d -o.\config_bumper.o -I.\RTE\_Target_1 -IC:\Keil_
v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\LM3S_DFP\1
.1.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1"
 --predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA 1" --predefin
e="LM3S1968 SETA 1" --list=.\config_bumper.lst Config_Bumper.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file Config_Bumper.s
   Uses
      None
Comment: .text unused
BUMPER_DROIT_ACTIF 0000005C

Symbol: BUMPER_DROIT_ACTIF
   Definitions
      At line 118 in file Config_Bumper.s
   Uses
      At line 101 in file Config_Bumper.s
Comment: BUMPER_DROIT_ACTIF used once
BUMPER_DROIT_VERIF 00000030

Symbol: BUMPER_DROIT_VERIF
   Definitions
      At line 97 in file Config_Bumper.s
   Uses
      At line 40 in file Config_Bumper.s
      At line 131 in file Config_Bumper.s

BUMPER_GAUCHE_ACTIF 0000008E

Symbol: BUMPER_GAUCHE_ACTIF
   Definitions
      At line 134 in file Config_Bumper.s
   Uses
      At line 111 in file Config_Bumper.s
Comment: BUMPER_GAUCHE_ACTIF used once
BUMPER_GAUCHE_VERIF 00000046

Symbol: BUMPER_GAUCHE_VERIF
   Definitions
      At line 108 in file Config_Bumper.s
   Uses
      At line 41 in file Config_Bumper.s
      At line 147 in file Config_Bumper.s

BUMPER_INIT 00000000

Symbol: BUMPER_INIT
   Definitions
      At line 63 in file Config_Bumper.s
   Uses
      At line 39 in file Config_Bumper.s
Comment: BUMPER_INIT used once
WAIT 000000C0

Symbol: WAIT
   Definitions
      At line 149 in file Config_Bumper.s
   Uses
      At line 125 in file Config_Bumper.s
      At line 143 in file Config_Bumper.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

WAITS2 000000C8

Symbol: WAITS2
   Definitions
      At line 154 in file Config_Bumper.s
   Uses
      At line 128 in file Config_Bumper.s
      At line 129 in file Config_Bumper.s
      At line 141 in file Config_Bumper.s
      At line 145 in file Config_Bumper.s

wait1 000000C2

Symbol: wait1
   Definitions
      At line 150 in file Config_Bumper.s
   Uses
      At line 151 in file Config_Bumper.s
Comment: wait1 used once
wait2 000000CA

Symbol: wait2
   Definitions
      At line 155 in file Config_Bumper.s
   Uses
      At line 156 in file Config_Bumper.s
Comment: wait2 used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BUMP_DROIT 00000001

Symbol: BUMP_DROIT
   Definitions
      At line 22 in file Config_Bumper.s
   Uses
      At line 110 in file Config_Bumper.s
Comment: BUMP_DROIT used once
BUMP_GAUCHE 00000002

Symbol: BUMP_GAUCHE
   Definitions
      At line 24 in file Config_Bumper.s
   Uses
      At line 99 in file Config_Bumper.s
Comment: BUMP_GAUCHE used once
BUMP_TOUS 00000003

Symbol: BUMP_TOUS
   Definitions
      At line 26 in file Config_Bumper.s
   Uses
      At line 80 in file Config_Bumper.s
      At line 88 in file Config_Bumper.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 32 in file Config_Bumper.s
   Uses
      None
Comment: DUREE unused
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 19 in file Config_Bumper.s
   Uses
      At line 82 in file Config_Bumper.s
Comment: GPIO_I_PUR used once
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 16 in file Config_Bumper.s
   Uses
      At line 85 in file Config_Bumper.s
Comment: GPIO_O_DEN used once
GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 8 in file Config_Bumper.s
   Uses
      None
Comment: GPIO_O_DIR unused
GPIO_O_DR2R 00000500




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_O_DR2R
   Definitions
      At line 12 in file Config_Bumper.s
   Uses
      None
Comment: GPIO_O_DR2R unused
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 4 in file Config_Bumper.s
   Uses
      At line 82 in file Config_Bumper.s
      At line 85 in file Config_Bumper.s
      At line 88 in file Config_Bumper.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 1 in file Config_Bumper.s
   Uses
      At line 65 in file Config_Bumper.s
Comment: SYSCTL_PERIPH_GPIO used once
VERIF 00000120

Symbol: VERIF
   Definitions
      At line 28 in file Config_Bumper.s
   Uses
      At line 102 in file Config_Bumper.s
      At line 112 in file Config_Bumper.s

11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LED_DROIT_OFF 00000000

Symbol: LED_DROIT_OFF
   Definitions
      At line 58 in file Config_Bumper.s
   Uses
      At line 136 in file Config_Bumper.s
Comment: LED_DROIT_OFF used once
LED_DROIT_ON 00000000

Symbol: LED_DROIT_ON
   Definitions
      At line 55 in file Config_Bumper.s
   Uses
      At line 120 in file Config_Bumper.s
Comment: LED_DROIT_ON used once
LED_GAUCHE_OFF 00000000

Symbol: LED_GAUCHE_OFF
   Definitions
      At line 57 in file Config_Bumper.s
   Uses
      At line 119 in file Config_Bumper.s
Comment: LED_GAUCHE_OFF used once
LED_GAUCHE_ON 00000000

Symbol: LED_GAUCHE_ON
   Definitions
      At line 56 in file Config_Bumper.s
   Uses
      At line 135 in file Config_Bumper.s
Comment: LED_GAUCHE_ON used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 46 in file Config_Bumper.s
   Uses
      At line 123 in file Config_Bumper.s
      At line 139 in file Config_Bumper.s
      At line 144 in file Config_Bumper.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 45 in file Config_Bumper.s
   Uses
      At line 142 in file Config_Bumper.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 47 in file Config_Bumper.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 44 in file Config_Bumper.s
   Uses
      At line 126 in file Config_Bumper.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 43 in file Config_Bumper.s
   Uses
      At line 121 in file Config_Bumper.s
      At line 137 in file Config_Bumper.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 52 in file Config_Bumper.s
   Uses
      At line 140 in file Config_Bumper.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 51 in file Config_Bumper.s
   Uses
      At line 124 in file Config_Bumper.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 53 in file Config_Bumper.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 50 in file Config_Bumper.s
   Uses
      At line 127 in file Config_Bumper.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 49 in file Config_Bumper.s
   Uses
      At line 122 in file Config_Bumper.s
      At line 138 in file Config_Bumper.s

loop 00000000




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

Symbol: loop
   Definitions
      At line 60 in file Config_Bumper.s
   Uses
      None
Comment: loop unused
start 00000000

Symbol: start
   Definitions
      At line 59 in file Config_Bumper.s
   Uses
      At line 104 in file Config_Bumper.s
      At line 114 in file Config_Bumper.s

16 symbols
374 symbols in table
